/* HEADS UP!
 * AS OF APRIL 2024, @use RULES CANNOT BE USED WHEN DEPLOYING TO GHP
*/

/* HEADS UP!
 * here we define only general rules, component rules are in their own
 * scss file and imported here
*/

// STYLE COMPONENTS
@import 'custom-vars.scss';
@import 'side-bar.scss';
@import 'header-above-content.scss';
@import 'page-toc.scss';
@import 'content-area.scss';
@import 'pages.scss';
@import 'page.scss';
@import 'tags.scss';
@import 'cats.scss';
@import 'tables.scss';
@import 'editor.scss';
@import 'context-menu.scss';
@import 'page-full-info.scss';
@import 'hs.scss';
@import 'gh.scss';
@import 'home-page.scss';

// this should be last import because component's settings are set in the imports above
@import 'meta.scss';

// GENERAL STYLES
$alwaysWithDefaultSiteFontElements: ('body');
@each $element in $alwaysWithDefaultSiteFontElements {
    #{$element} {
        font-family: $siteFontFamily !important;
    }
}

$alwaysWithBaseFontSize: ('body');
@each $element in $alwaysWithBaseFontSize {
    #{$element} {
        font-size: $fs-body !important;
    }
}

//.dt-scroll-headInner because scrollX:true makes datatable header to not cover the table width
$fullWidthElements: (
    '.site-header', 
    '.search', 
    '.site-footer', 
    '#site-nav'
); 
@each $element in $fullWidthElements {
    #{$element} {
        width:$sz-full !important;
        max-width:$sz-full !important;
    }
}

$weight600Elements: (
    'h1', 
    'h2', 
    'h3', 
    'h4'
);
@each $element in $weight600Elements {
    #{$element} {
        font-weight:$f-semiBold;
    }
}

$alwaysWhiteTextElements: (
    '.site-header a', 
    'a[siteFunction="tagPageItemLinkToDoc"]', 
    'a[siteFunction="menuItemLevel1"]', 
    'button[siteFunction="tableColumnsVisibility"] span',
    'button[siteFunction="tableSearchPanes"] span', 
    'button[siteFunction="tableNavigateToSavedItems"] span', 
    'button[siteFunction="tablePageCustomNotesRemoveAllNotes"] span',
    'button[siteFunction="tableNavigateToCategoriesSP"] span',
    'button[siteFunction="tableClearFiltersSP"] span',
    'button[siteFunction="sitePagesDetailsShowSearchPanes"] span',
    'button[siteFunction="sitePagesDetailsClearFilter"] span',
    'button[siteFunction="btnMenuMoreToggle"] span'
);
@each $element in $alwaysWhiteTextElements {
    #{$element}, #{$element}:hover {
        color: $siteHeaderTextColor !important; 
    }
}

$noBackgroundChangeWhenHoverElements: ('.dropdown-item');
@each $element in $noBackgroundChangeWhenHoverElements {
    #{$element}:hover {
        background-color: $c-not-set !important; 
    }
}

$alwaysBlackTextElements: (
    'li[siteFunction="searchTagListItem"]', 
    '.page-link', 
    '.DocSearch-Button-Placeholder', 
    'button[siteFunction="tableLockFirstColumn"] span',
    '.ck-button__label',
    '.context-menu-item a',
    '.context-menu-header',
    '.context-menu-footer',
    '.buttons-columnVisibility span',
    'button[siteFunction="tableNavigateToTags"] span',
    'button[siteFunction="tableNavigateToTagsSP"] span',
    'button[siteFunction="tableNavigateToCategories"] span',
    'a[sitefunction="menuItemLevel2"]',
    '.dtsp-caret'
);
@each $element in $alwaysBlackTextElements {
    #{$element} {
        color: $textColor !important;
    }
}

$alwaysBodyBackgroundColorElements: (); // '.side-bar' if you want the sidebar to have the same background as the content area
@if (length($alwaysBodyBackgroundColorElements)>0) {
    @each $element in $alwaysBodyBackgroundColorElements {
        #{$element} {
            background: $sidebarBackground;
        }
    }
}

$alwaysTransparentBackgroundColorElements: ('.feedbackFormClass');
@if (length($alwaysTransparentBackgroundColorElements)>0) {
    @each $element in $alwaysTransparentBackgroundColorElements {
        #{$element} {
            background: $c-transparent;
        }
    }
}

$neverDecoratedTextElements: ('a');
@each $element in $neverDecoratedTextElements {
    #{$element}, #{$element}:hover {
        text-decoration: $dec-none !important;
    }
}

$alwaysUnderlinedOnHoverTextElements: ('a[siteFunction*="menuItemLevel"]');
@each $element in $alwaysUnderlinedOnHoverTextElements {
   #{$element}:hover {
        text-decoration: $dec-underline !important;
    }
}

$hiddenElements: (
    'hr', 
    '#docFeedbackForm', 
    'div[siteFunction="tagDetails"] ul li::before', 
    'td::before', 
    '.dt-paging-button::before',
    '.ck-powered-by',
    'div[sitefunction="offcanvasPageFullInfoPageTagsEditor"] li::before',
    '.ck-menu-bar__menu__item::before',
    '.ck-list__separator::before',
    '.dtfh-floatingparent'
);
@each $element in $hiddenElements {
        #{$element} {
            display:$d-hidden !important;
        }
}

$visibleElements: (
    'hr[siteFunction="pageContentTopSeparator"]',
    'hr[siteFunction="pageContentBottomSeparator"]',
    'hr[siteFunction="pageFeedbackAndSupportSeparator"]',
    'hr[siteFunction="pageFeedbackAndSupportCol1Separator"]',
    '.dropdown-divider', 
    //'hr[siteFunction="pageTocHeaderSeparator"]',
    'hr[siteFunction="contextMenuSeparator"]',
    'hr[siteFunction="offcanvasPageFullInfoPageGeneralSeparator"]',
    'hr[siteFunction="pageAutoSummarySeparator"]',
    'hr[siteFunction="addPageToCatOrTag"]',
    'hr[siteFunction="sitePagesDetailsLastFilterSeparator"]'
);
@each $element in $visibleElements {
        #{$element} {
            display:$d-block !important;
        }
}

$alwaysNoBorderBottomElements: (
    'ul[siteFunction="tagPageItem"]:last-child',
    '.dt-processing'
);
@each $element in $alwaysNoBorderBottomElements {
    #{$element} {
        border-bottom: $b-none !important;
    }
}

$alwaysNoBorderElements: ('.dt-processing');
@each $element in $alwaysNoBorderElements {
    #{$element} {
        border: $b-none !important;
    }
}

$alwaysNoMarginElements: ('hr[sitefunction="contextMenuSeparator"]');
@each $element in $alwaysNoMarginElements {
    #{$element} {
        margin: $m-0px !important;
    }
}

$btnID: '#ihs_go_to_top_btn';
@include goToTopBtn($btnID);

$alwaysFlexAutoElements: ('#category-menu');
@each $element in $alwaysFlexAutoElements {
   #{$element} {
        flex: $fl-all-available-space;
    }
}

$alwaysCursorPointerElements: ('.alwaysCursorPointer');
@each $element in $alwaysCursorPointerElements {
   #{$element} {
        cursor: $cr-pointer;
    }
}

$alwaysTextAlignmentLeft: ('.alwaysTextToLeft');
@each $element in $alwaysTextAlignmentLeft {
   #{$element} {
        text-align: $tal-h-left !important;
    }
}
