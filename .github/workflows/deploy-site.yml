name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["gh-pages"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set local variables
        id: set-vars
        run: |
          pyEnable=$(grep -Po 'pyEnable:\s*\K(true|false)' _data/buildConfig.yml) 
          echo "pyEnable=$pyEnable" >> $GITHUB_OUTPUT
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0
              
      - name: Setup Python (if pyEnable is set)
        if: steps.set-vars.outputs.pyEnable == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
        
      - name: Install Python dependencies (if pyEnable is set)
        if: steps.set-vars.outputs.pyEnable == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow tensorflow-hub numpy pandas markdown transformers langdetect

      - name: Run Python pre-build scripts (if pyEnable is set)
        if: steps.set-vars.outputs.pyEnable == 'true'
        run: |
          ./tools_py/preBuild-pyScripts

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: bundle exec jekyll build --incremental --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          TEST_VAL: ${{ secrets.TEST_VAL }}
          JEKYLL_ACCESS_TOKEN: ${{ secrets.JEKYLL_ACCESS_TOKEN }}
          JEKYLL_GIT_USER: ${{ secrets.JEKYLL_GIT_USER }}
          CONSOLE_BLANK_SPINNER_CHARS: ${{ secrets.CONSOLE_BLANK_SPINNER_CHARS }}
          HS_PORTAL_ID: ${{ secrets.HS_PORTAL_ID }}
          HS_FEDBACK_FORM_ID: ${{ secrets.HS_FEDBACK_FORM_ID }}
          HS_REGION: ${{ secrets.HS_REGION }}

      - name: Save file timestamps
        run: |
          find . -type f -exec stat --format='%Y %n' {} \; > $GITHUB_WORKSPACE/file_timestamps.txt

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Restore file timestamps
        run: |
          while read -r timestamp filename; do
            touch -d @"$timestamp" "$filename"
          done < $GITHUB_WORKSPACE/file_timestamps.txt
